%%
%% WARNING! DO NOT EDIT!
%% This file is automatically generated from coxph.R
%%
\name{inla.coxph}
\alias{inla.coxph}
\alias{inla.cbind.data.frames}
\alias{coxph}
\alias{cbind.data.frames}
\title{Convert a Cox proportional hazard model into Poisson regression}
\description{Tools to convert a Cox proportional hazard model into Poisson regression}
\usage{
    inla.coxph(formula, data, control.hazard = list())
    inla.cbind.data.frames(...)
}
\arguments{
  \item{formula}{The formula for the coxph model where the reponse must be a \code{inla.surv}-object.}
  \item{data}{All the data used in the formula,  as a list.}
  \item{control.hazard}{Control the model for the baseline-hazard; see \code{?control.hazard}.}
  \item{...}{Data.frames to be cbind-ed,  padding with \code{NA}.}
}
\value{
      \code{inla.coxph} returns a list of new expanded variables to be used in the \code{inla}-call.
      \code{inla.cbind.data.frames} returns a new data.frame.
}
\author{Havard Rue \email{hrue@math.ntnu.no}}
\examples{
## Standard example of how to convert a coxph into a Poisson regression
n = 100
x = runif(n) 
lambda = exp(1+x)
y = rexp(n, rate=lambda)
event = rep(1,n)
data = list(y=y, event=event, x=x)
y.surv = inla.surv(y, event)
p = inla.coxph(yy.surv ~ x, list(y.surv = y.surv,  x=x))
model = inla(p$formula, 
        family = p$family, 
        data=p$data,
        E = p$E,
        .internal = p$.internal)
summary(model)

## Doing it manually makes it possible to do a coxph model
## jointly with other models
interc2 = rep(1, n)
y = 1 + x + rnorm(n, sd=0.1)
df = data.frame(interc2, x, y)

df.joint = inla.cbind.data.frames(p$data, df)
## Make the new respose
Y = cbind(df.joint$y..coxph, df.joint$y)
## Add it to the data.frame which must now become a list
df.joint = as.list(df.joint)
df.joint$Y = Y
## Add the second model into the formula
formula = update(p$formula, Y ~ interc2 -1 + .)
## And we're done...
rr = inla(formula,
        family = c("poisson", "gaussian"),
        data = df.joint,
        E = df.joint$E,
        .internal = p$.internal)
}
