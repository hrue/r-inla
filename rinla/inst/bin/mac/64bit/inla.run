#!/bin/bash

if readlink -f / 2>/dev/null >/dev/null; then
    myreadlink () {
	readlink "$@"
    }
else
    myreadlink () {
	(
	    shift 1
	    tfile=$1
	    cd $(dirname "$tfile")
	    tfile=$(basename "$tfile")
	    while [ -L "$tfile" ]
	    do
		tfile=$(myreadlink -f "$tfile")
		cd $(dirname "$tfile")
		tfile=$(basename "$tfile")
	    done
	    pdir=$(pwd -P)
	    echo "$pdir/$tfile"
	)
    }
fi

cmd=$(myreadlink -f "$0")
DIR=$(dirname "$cmd")
tmp=$(basename "$cmd")
prog=${tmp%%.run}

if [ -z "$INLA_RHOME" ]; then
    if $(which R 2>/dev/null >/dev/null); then
	RHOME_LIB="$(R RHOME)/lib"
    else
	RHOME_LIB="/Library/Frameworks/R.framework/Resources/lib"
    fi
else
    RHOME_LIB="$INLA_RHOME/lib"
fi

## this is the system path for libPng.dylib needed by grDevices.so
## when loadlib libR.dylib using rgeneric.
pathA="/System/Library/Frameworks/ImageIO.framework/Versions/Current/Resources"
pathB="/System/Library/Frameworks/OpenGL.framework/Versions/Current/Libraries"
LIBPNGPATH=$pathA:$pathB

if [ -n "${INLA_MALLOC_LIB}" ]; then
    if [ -f "${INLA_MALLOC_LIB}" ]; then
	export DYLD_INSERT_LIBRARIES="${INLA_MALLOC_LIB}:$DYLD_INSERT_LIBRARIES"
	export DYLD_FORCE_FLAT_NAMESPACE=1
    else   
	for nm in ${INLA_MALLOC_LIB}; do
	    for f in $DIR/malloc/lib*.dylib*; do
		case "$f" in
		    $DIR/malloc/lib${INLA_MALLOC_LIB}malloc.dylib*)
			export DYLD_INSERT_LIBRARIES="$f:$DYLD_INSERT_LIBRARIES"
			export DYLD_FORCE_FLAT_NAMESPACE=1
			;;
		esac
	    done
	done
    fi
    case "$DYLD_INSERT_LIBRARIES" in
	*libjemalloc*) 
	    export MALLOC_CONF='abort_conf:true,metadata_thp:always'
	    ;;
    esac
fi

export OMP_SCHEDULE=STATIC
##export OMP_PROC_BIND=FALSE
##export OMP_WAIT_POLICY=ACTIVE
export PARDISOLICMESSAGE=1
export DYLD_LIBRARY_PATH="$DIR/first:$RHOME_LIB:$DIR:$LIBPNGPATH:/usr/lib:/usr/local/lib:/opt/local/lib:$DYLD_LIBRARY_PATH"

if [ "${INLA_DEBUG}XX" != "XX" ]; then
    echo "MALLOC_CONF=$MALLOC_CONF"
    echo "DYLD_INSERT_LIBRARIES=$DYLD_INSERT_LIBRARIES"
    echo "DYLD_FORCE_FLAT_NAMESPACE=$DYLD_FORCE_FLAT_NAMESPACE"
    echo "DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH"
    
    ##export DYLD_PRINT_OPTS="1"
    ##export DYLD_PRINT_ENV="1"
    export DYLD_PRINT_LIBRARIES="1"
    ##export DYLD_PRINT_LIBRARIES_POST_LAUNCH="1"
    ##export DYLD_PRINT_APIS="1"
    ##export DYLD_PRINT_BINDINGS="1"
    ##export DYLD_PRINT_INITIALIZERS="1"
    ##export DYLD_PRINT_REBASINGS="1"
    ##export DYLD_PRINT_SEGMENTS="1"
    ##export DYLD_PRINT_STATISTICS="1"
    ##export DYLD_PRINT_DOFS="1"
    ##export DYLD_PRINT_RPATHS="1"

    p="/usr/bin/sw_vers"
    test -x $p && $p
fi

nt="-t0:1"
for arg in "$@"; do 
    case "$arg" in
	-t*) nt="$arg";;
    esac
done
eval $("$DIR/$prog" $nt -mopenmp|grep ^export)
if [ ! -z ${INLA_DEBUG+x} ]; then
    set | grep ^OMP_ | while read v; do echo "*** $0 *** $v"; done
    echo " *** $0 *** exec $DIR/$prog $@"
fi

exec "$DIR/$prog" "$@"
