#!/bin/bash

myreadlink () {
    (
        TARGET_FILE=$1
        cd `dirname $TARGET_FILE`
        TARGET_FILE=`basename $TARGET_FILE`
        while [ -L "$TARGET_FILE" ]
        do
            TARGET_FILE=`readlink $TARGET_FILE`
            cd `dirname $TARGET_FILE`
            TARGET_FILE=`basename $TARGET_FILE`
        done
        PHYS_DIR=`pwd -P`
        RESULT=$PHYS_DIR/$TARGET_FILE
        echo $RESULT
    )
}

D=$(dirname "$1")
D=${D/%bin/lib}

Afun () {
    {
	for f in "$@"; do
	    for fz in $(otool -l "$f" | grep .dylib | awk '{print $2}'); do
		for ff in "$fz" "$D/$fz"; do
		    if [ -f "$ff" ]; then
			for fff in $(otool -l "$ff" | grep .dylib | awk '{print $2}'); do
			    if [ -f "$fff" ]; then
				echo "$fff"
			    fi
			    if [ -f "$D/$fff" ]; then
				echo "$D/$fff"
			    fi
			done
		    fi
		done
	    done
	done
    } | sort | uniq | \
	grep -v /usr/lib/system | \
	grep -v /usr/lib/libSystem | \
	##grep -v libX11. | \
	grep -v /usr/lib/libicucore.A.dylib | \
	grep -v /usr/lib/libbz2.1.0.dylib | \
	grep -v /usr/lib/libiconv.2.dylib | \
	grep -v /usr/lib/libz.1.dylib | \
	awk '/libgcc_s/{print; gsub("gcc_s", "gcc_s_x86_64"); print; next};{print}'
}

Xfun () {
    for lib in "$@"; do
	case "$lib" in
	    /opt/*) 
		test -f "$lib" && otool -l $lib | grep .dylib | grep /opt
		;;
	    /System/Library/Frameworks/Accelerate.framework/*)
		test -f "$lib" && otool -l $lib | grep .dylib | grep /Accelerate.framework
		;;
	    *)
		echo $lib | grep -v ^/usr/lib ## | grep -v ^/Library/Frameworks/R.framework
		;;
	esac
    done
}

A=$(Afun "$@")
A=$(Xfun $A)
A=$(Xfun $A)
A=$(Xfun $A)
A=$(Xfun $A)

replace () {
    cat | while read f; do
	ff=$(basename $f)
	if $(uname -a |grep -q ARM64); then 
	    d="$HOME/builds/arm64/local/lib"
	else
	    d="$HOME/builds/build64/local/lib"
	fi
	fff=$d/$ff
	if [ -f $fff ]; then
	    echo $(myreadlink $fff)
	else
	    d="/Library/Frameworks/R.framework/Versions/Current/Resources/lib"
	    fff=$d/$ff
	    if [ -f $fff ]; then
		echo $(myreadlink $fff)
	    else
		echo $(myreadlink $f)
	    fi
	fi
    done
}	     

{
    echo $A | awk '{for(i=1;i<=NF;i++) print $i}' | grep dylib | grep -v : 
    
    for lib in Rblas Rblas.vecLib Rlapack; do
	name="/Library/Frameworks/R.framework/Versions/Current/Resources/lib/lib$lib.dylib"
	if [ -f $name ]; then
	    echo $name
	fi
    done

    if $(uname -a |grep -q ARM64); then 
	echo $HOME/builds/arm64/local/lib/libpardiso720-MACOS-ARM64-RINLA.so
    else
	echo $HOME/builds/build64/local/lib/libpardiso720-MACOS-X86-64-RINLA.dylib
	MKL=/opt/intel/oneapi/mkl/latest/lib
	if false; then
	    echo $(myreadlink $MKL/libmkl_intel_lp64.2.dylib)
	    echo $(myreadlink $MKL/libmkl_sequential.2.dylib)
	    echo $(myreadlink $MKL/libmkl_core.2.dylib)
	    for f in $(echo $MKL/libmkl_avx*.2.dylib) $(echo $MKL/libmkl_vml_avx*.2.dylib) $(echo $MKL/libmkl_mc*.dylib); do
		echo $(myreadlink $f)
	    done
	fi
    fi
} | sort | awk '{gsub(/\.\//,"");print}' | uniq | replace | sort | uniq


