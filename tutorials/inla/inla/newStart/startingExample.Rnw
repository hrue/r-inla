\chapter{How to use \tv{R-INLA}: A first overview}
<<echo=FALSE>>=
library(INLA)
@

There are essentially four parts to an \tv{R-INLA}-program: 1) Organise 
the data and store response, covariate, \ldots, in an object; 2) Use 
the \tv{formula} notation to specify the model; 3) Call the 
\tv{inla}-program; 4)) Extract posterior information of interest.\\[0.2cm]

Before we go into detail on how these four steps proceed, consider a simple 
example describing the world records in ski jumping from
1961 to 2011. Figure~\ref{fig:ski} shows the obtained length in meters for 
the corresponding years.
\begin{figure}
\begin{center}
<<echo=FALSE, fig.width=10, fig.height=7, out.width=".8\\textwidth">>=
a = read.table("examples/ski.txt", header=F, sep="\t")
year = sort(as.numeric(substr(a[,4], 1,4)), index.return=T)

as = a[year$ix, ]

b=cbind(as[,1], year$x)

yearu = unique(year$x)

m = matrix(0, ncol=2, nrow=length(yearu))

for(i in 1:length(yearu)){
	t =yearu[i] - 1960
	len = max(b[b[,2] ==yearu[i],1])
	m[i,] = c(t,len)
}
par(mar=c(5,5,5, 0.5), cex.lab=1.3, cex.axis=1.3, cex.main=1.4)
plot(m[,1], m[,2], xlab="year", 
	ylab="Length in meters",
	pch=19, xaxt="n")
axis(1, at=seq(1, 51, by=5), label=seq(1961, 2011, by=5))
res = lm(m[,2] ~ m[,1])
abline(res, col=2)
legend("topleft", c("Linear model"), col=2, lty=1)
@
\caption{World records in ski jumping, 1961--2011.\label{fig:ski}}
\end{center}
\end{figure}
Obviously, there seems to be a linear relationship in the data. Thus, let us 
assume a simple linear regression model with
\begin{align*}
  E(y_i) &= \mu + \beta x_i,& Var(y_i) = 1/\tau.
\end{align*}
for $i=1, \ldots, n$. Here $y_i, i=1, \ldots, n$ represents the obtained jump 
length of the record and $x_i, i=1, \ldots, n$, an index for the year in which 
the record was obtained. Fitting a linear model in R using:
<<eval=FALSE>>=
  lm(y ~ x)
@
leads to the red line indictated in Figure~\ref{fig:ski}, with intercept equal 
to $\Sexpr{format(coef(res)[1], digits=2, nsmall=2)}$ 
(SD: $\Sexpr{format(summary(res)$coefficients[1,2], digits=2, nsmall=2)}$) and
slope $\beta$ equal to $\Sexpr{format(coef(res)[2], digits=2, nsmall=2)}$ 
(SD: $\Sexpr{format(summary(res)$coefficients[2,2], digits=2, nsmall=2)}$).

Alternatively we can use a Bayesian approach, where priors are assigned to the 
parameters $\mu$, $\beta$ and $\tau$. Delaying the issue of choosing priors to 
Section TODO, assume we use the default priors of \tv{R-INLA}. Then we can
define the linear model in using

\begin{itemize}
	\item[1.]
		\textbf{Data organisation}: Make an object to store 
response and covariate information\\[0.2cm]
		\hspace{0.5cm}\verb|data = list(y = y, x = x)|
	\item[2.]
		\textbf{Use the \tv{formula}-notation} to specify the 
model (similar to \tv{lm} and \tv{glm} functions)\\[0.2cm]
		\hspace{0.5cm}\verb|formula = y~x|
	\item[3.]
		\textbf{Call the \tv{inla}-program}\\[0.2cm]
		\hspace{0.5cm}
	\verb|res = inla(formula, data=data, family="gaussian")|
	\item[4.] \textbf{Extract posterior information}, e.g.~for a 
first overview use \\[0.2cm]
		\hspace{0.5cm}\verb|summary(res)|
\end{itemize}

The obtained summary of the posterior estimates in step 4. is as follows:
<<echo=FALSE>>=
data = data.frame(y=m[,2],x=m[,1])
library(INLA)
formula = y~x
model = inla(formula, family="gaussian", data=data)
summary(model)
@

\section{Data organisation}

The responses and covariates are collected in an \tv{R}-object of type 
\tv{list} or \tv{data.frame}. Assume we have a response \texttt{y}, covariates 
\texttt{x1} and \texttt{x2}, and a time index \texttt{t}. Then can they be 
organized in one object using

<<eval=FALSE>>=
# Option 1: Generate a list object
data = list(y = y, x1 = x1, x2 = x2, t = t)

# Option 2: Generate a data.frame
data = data.frame(y = y, x1 = x1, x2 = x2, t = t)
@

\section{Specifying the linear predictor}

Similar to the well-know functions \tv{lm} and \tv{glm} in R, is the model 
specified using a \tv{formula} object of the for

<<eval=FALSE>>=
formula = y ~ x1 + x2 + f(t, ...)
@
Here, \tv{y} is the name of the response in the object \tv{data}. The 
fixed effects are given i.i.d Gaussian priors with mean zero and low inverse 
variance (default: $0.01$).The \tv{f} function is used to specify random 
effects, such as temporal or spatial effects or smooth effects of covariates,
see Section TODO. An intercept is included automatically and can be removed
by adding \tv{-1} to the formula.


\section{Calling \tv{inla}}

After the data are organised and the model is specified we can call the 
\tv{inla} function, which in its basic form is
<<eval=FALSE>>=
result = inla(
    # Description of linear predictor
    formula,
    # Likelihood
    family = "gaussian",
    # List or data frame with response, covariates, etc.
    data = data,
    
    ## This is all that is needed for a basic call  
    # check what happens
    verbose = TRUE,
    # keep working files
    keep = TRUE
    
    # there are also some "control statements"
    # to customize things)
@
% 
% Provide an example that illustrates the most central point of R-INLA
% and also points common to several examples. Thus, maybe an
% interesting/popular example including fixed and random effects.
% 
% Show data structure, model definition, inla call, output + interpretation.
% 
% Goal: After reading this section the reader should already have
% an idea about how \verb|R-INLA| works, its structure, output and some details.
% 
