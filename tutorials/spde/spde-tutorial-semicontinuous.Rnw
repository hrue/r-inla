\chapter{Semicontinuous model to daily rainfall}\label{ch:semic}

\SweaveOpts{prefix.string=figs/semicont}
<<sett,echo=FALSE,results=hide>>=
options(width=75, prompt = " ", continue = "   ") 
require(splancs) 
require(INLA) 
require(gridExtra) 
require(lattice) 
lcall <- inla.getOption('inla.call') 
inla.setOption(inla.call='remote') 
@ 

This chapter is better presented in the 
last chapter of~\cite{blangiardoC:2015}.

In some applications we have data with is 
hard to fit a single distribution to. 
For example, when whe have more zeros than 
the expected under a Poisson distribution. 
In that case there is a waste literature 
considering zero-inflated models. 
These models are implemented in 
many softwares as well. 

With hierarchical models, sometimes 
a random effect is sufficient 
to explain the zeroinflation. 
This is true in same sense where a 
random effect is sufficient to 
explain the extra variation, 
considering the overdispersion models. 
These cases happens when a specified 
random effect is sufficient to 
explain the zeroinflation 
(or the overdispersion). 

A different problem happens with daily rainfall. 
In this case is not easy to fit a simple model. 
There are days without rain and 
when we have precipitation on a day, 
we have a continuous amount of water. 
A particular case in this problem is that 
the daily cumulated precipitation 
is commonly very asymmetric. 

\section{The hurdle continuous model}

In this section we build a jointly model 
for occurrence and rainfall amount. 
We call it a semicontinuous model 
because we have zeros and positive 
continuous values. 

Let $r_i$ the rainfall amount at location $i$. 
We define two new variables.
One is the occurence variable 
\[
z_i = 
\begin{cases} 
  1, & \text{if } r_i >0  \\
  0, & \text{otherwise}
\end{cases}
\]
and other the rainfall amoung variable 
\[
y_i = 
\begin{cases}
  NA, &\text{if } r_i=0 \\
  r_i,&\text{otherwise}
\end{cases}
\]

Now we can define a model for each one variable. 
We use a model with two likelihoods. 
We use the Bernoulli likelihood for 
$z_i$ and the gamma for $y_i$. 
\[
z_i \sim \text{Bernoulli}(p_i) \;\;\;\;\;\;\;
y_i \sim \text{Gamma}(a_i, b_i)
\]

We define the linear predictor to first component by 
\[
\text{logit}(p_i ) = \alpha_z + x_i \\
\]
where $\alpha_z$ is an intercept and
$x_i$ is a random effect modeled by a 
Gaussian field through the SPDE approach.

To second component we consider that 
$E(y_i) = \mu_i = a_i/b_i$ and $V(y_i) = a_i/b_i^2=\mu_i^2/\phi$, 
where $\phi$ us a precision parameter and we 
define a linear predictor to $\text{log}(\mu_i)$. 
We have
\[
\text{log}(\mu_i) = \alpha_y + \beta_x x_i 
\]
where $\alpha_y$ is an intercept and 
$\beta_x$ is a scaling parameter to $x_i$ 
that is a shared random effect with the 
first component of the model. 

\section{The daily rainfall data} 

We use a rainfall data collected by the 
Brasilian National Wather Agency. 
We have a dataset collected at 616 
gauge stations for each day of 2011. 
These stations covers the 
Paran\'a State in South of Brasil. 

These data are available on \textbf{\textsf{INLA}} 
package and can be called by
<<readdata>>=
data(PRprec) 
@ 
and we have, at first three columns, the 
coordinates and altitude. 
We can see this informations and 
the rainfall for the first seven days 
at three stations with 
<<prechead>>=
PRprec[1:3, 1:10] 
@ 
Also considering the first seven days, 
A summary over stations for the first seven days
and the number of stations with rain
<<summ>>=
sapply(PRprec[,4:10], summary) 
colSums(PRprec[,4:10]>0, na.rm=TRUE) 
@ 
and we see, for example, 
that we have that the third quartil 
for the first day is zero when we have 
rain only at 72 stations. 
We also have missing values. 

On this section we consider the data 
at third day. We define the two 
response variables with 
<<vardef>>=
jday <- 6 
z <- (PRprec[,jday]>0) + 0 
y <- ifelse(PRprec[,jday]>0, PRprec[,jday], NA) 
@ 

The map of this data are showed on the left graph 
of the Figure~\ref{fig:rain}. 
Also, the histogram of the positive precipitation 
are on the rigth graph of this Figure. 
Both produced by the code below
<<rain,eval=FALSE>>=
par(mfrow=c(1, 2), mar=c(3,3,.5,0), mgp=c(1.5,0.5,0)) 
hist(y, xlab='mm', col=gray(.9), main='') 
par(mar=c(0,0,0,0)) 
plot(PRprec[,1:2], cex=0.3 + PRprec[,jday]/20, asp=1, 
     col=c('red', 'blue')[z+1], axes=FALSE) 
q.y <- c(0, quantile(y, 0:7/7, na.rm=T)) 
legend('topright', format(q.y, dig=2), pch=1, bty='n', 
       pt.cex=0.3+q.y/20, col=c('red',rep('blue',length(q.y)-1))) 
@ 
\setkeys{Gin}{width=0.99\textwidth} 
\begin{figure}\centering 
<<vrain,echo=F,fig=T,eps=F,width=11,height=4.5>>=
<<rain>>
@ 
\caption{Histogram of rainfall amount 
  and map of precipitation.} 
\label{fig:rain}
\end{figure}

\section{Model fitting and some results}

First we need to define the mesh 
and prepare the data to fit the model. 
<<echo=F>>=
mesh <- inla.mesh.2d(cbind(PRprec[,1], PRprec[,2]), 
                     max.edge=c(0.5, 1), cutoff=0.05) 
mesh$n
@ 

The SPDE model definition is made by 
<<spdedef>>=
spde <- inla.spde2.matern(mesh, alpha=2) 
@ 

We have to prepare the data in 
addequate form using the stack functionality. 
First we get the predictor matrix for the 
SPDE model effect with 
<<A>>=
A <- inla.spde.make.A(mesh, loc=as.matrix(PRprec[,1:2])) 
@ 

For comparison pourpose, we can fit a 
model only with the rainfall occurrence 
and another only with rainfall amount. 
Because we have to fit the joint model, 
we prepare the stack for each separated 
model considering each response and also 
the response for the jointly model. 
For the jointly model, we need to have 
a two columns response. 

The stack for the occurrence is 
<<modelssep>>=
stk.z <- inla.stack(tag='est.z', 
                    data=list(z=z, ### occurrence for separate model
                        y=cbind(z, NA)), ### z at first column of y
                    A=list(A, 1), 
                    effects=list( 
                      list(i.z=1:spde$n.spde), 
                      list(z.b0=rep(1,length(z))))) 
@ 
The data stack for the precipitation amount is 
<<stack>>=
stk.y <- inla.stack(tag='est.y', 
                    data=list(r=y, ### rainfall for separate model
                        y=cbind(NA, y)), ### rainfall at second column 
                    A=list(A, 1), 
                    effects=list( 
                      list(i.y=1:spde$n.spde), 
                      list(y.b0=rep(1,length(y))))) 
@ 

Fitting the model for each response separately 
<<ressep>>=
res.z <- inla(z ~ 0 + z.b0 + f(i.z, model=spde), family='binomial', 
              data=inla.stack.data(stk.z), control.compute=list(dic=TRUE), 
              control.predictor=list(A=inla.stack.A(stk.z), compute=TRUE)) 
res.y <- inla(r ~ 0 +  y.b0 + f(i.y, model=spde), family='gamma', 
              data=inla.stack.data(stk.y), control.compute=list(dic=TRUE), 
              control.predictor=list(A=inla.stack.A(stk.y), compute=TRUE)) 
@ 

Defining a full data stack that join both responses for jointly model
<<stk.full>>=
stk.zy <- inla.stack(stk.z, stk.y) 
@ 

To fit the model, we make inference to $\beta_x$ 
using the copy of the strategy 
with \code{fixed=FALSE}.
<<model>>=
res.zy <- inla(y ~ 0 + z.b0 + y.b0 + 
               f(i.z, model=spde) + f(i.y, copy='i.z', fixed=FALSE), 
               family=c('binomial', 'gamma'), 
               data=inla.stack.data(stk.zy), control.compute=list(dic=TRUE), 
               control.predictor=list(A=inla.stack.A(stk.zy), compute=TRUE)) 
@ 

Also to compare, we fit the model by defining the SPDE model on 
the rainfall amount equation and copying it on the occurrence equation 
<<modelyz>>=
res.yz <- inla(y ~ 0 + z.b0 + y.b0 + 
               f(i.y, model=spde) + f(i.z, copy='i.y', fixed=FALSE), 
               family=c('binomial', 'gamma'), 
               data=inla.stack.data(stk.zy), control.compute=list(dic=TRUE), 
               control.predictor=list(A=inla.stack.A(stk.zy), compute=TRUE)) 
@ 

We can see if the spatial effect are correlated by looking at posterior 
of the $\beta_x$ parameter. We see that on both jointly models it is 
different from zero. So, the rainfall ocurrence and rainfall amount 
share the same spatial pattern. 
<<beta-spde>>=
round(rbind(beta.zy=res.zy$summary.hy[4, ], beta.yz=res.yz$summary.hy[4, ]), 4)
@ 

These values for $\beta_x$ are different due that they are fitted taking into 
account two factores. One is relatinship existence between the spatial effect 
on both linear predictor. We infer this looking if $\beta_x$ is less or greater 
than zero. The second factor is related to the variance of the effect on 
the first equation. The value considering the two different orders are equal 
only if the variance of the effect on first equation is one. 
In other words, the probability of rain occurrence is correlated with the amoung 
of the rain, like the prefencential sampling problem~\cite{diggleetal:2010}. 

We can compare the results obtained of the two separated models 
with the two joint models looking at its DIC values. 
But, we need to take care on DIC value from the joint 
models. It computed by summing the local DIC for each observation 
of both responses. So, we have to compute the correct DIC value 
for each response by sum of local DIC values correspoinding to each one. 
<<dics>>=
iz <- inla.stack.index(stk.zy, tag='est.z')$data 
dic.zy <- c(dic.z = sum(res.zy$dic$local.dic[iz], na.rm=TRUE), 
            dic.y = sum(res.zy$dic$local.dic[-iz], na.rm=TRUE))
dic.yz <- c(dic.z = sum(res.yz$dic$local.dic[iz], na.rm=TRUE), 
            dic.y = sum(res.yz$dic$local.dic[-iz], na.rm=TRUE))
@ 
We see that, considering occurrence, the DIC from jointly model is similar than one 
from separate model, when the SPDE model is declared on the occurrence equation. 
<<dics-sj>>=
rbind(sep=c(res.z$dic$dic, res.y$dic$dic), joint.zy=dic.zy, joint.yz=dic.yz)     
@ 

Now, we look at the summary of the posterior distribution 
for $\alpha_z$ considering the three models fitted that includes this parameter 
<<summaries-alphaz>>=
round(rbind(sep=res.z$summary.fix, joint.zy=res.zy$summary.fix[1,], 
            joint.yz=res.yz$summary.fix[1,]), 4)
@ 
and we see that the posterior mean of these three results are different from 
separate model to jointly ones. But, $\alpha_z$ still not different from zero, 
because with separate model, when the posterior mean value is more far from 
zero, the posterior standard deviation is greater. Due to it, when we compute 
the cumulative distribution at zero, under the posterior distribution from 
the three results, the values are similar. 
<<p0alphaz>>=
sapply(list(sep=res.z$marginals.fix[[1]], joint.zy=res.zy$marginals.fix[[1]], 
            joint.yz=res.yz$marginals.fix[[1]]), function(m) inla.pmarginal(0, m))
@ 

For $\alpha_y$ 
<<summaries-alphaz>>=
round(rbind(sep=res.y$summary.fix, joint.zy=res.zy$summary.fix[2,], 
            joint.yz=res.yz$summary.fix[2,]), 4)
@ 
we have quite similar posterior mean from the three fitted models. 

We apply the inverse of the link function to 
look at response scale with
<<invlink>>=
c(binomial(link='logit')$linkinv(res.zy$summary.fix[1,1]), 
  exp(res.zy$summary.fix[2,1])) 
@ 
and it looks similar to observed:  
<<obs>>=
c(occ=mean(z, na.rm=TRUE), rain=mean(y, na.rm=TRUE)) 
@ 

The summary for the posterior marginal distribution of Gamma
precision parameter is
<<sphi>>=
res.yz$summary.hy[1, ] 
@ 

We look the posterior marginal distributions 
of $\alpha_z$, $\alpha_y$, 
$\phi$ and $\beta$ on Figure~\ref{fig:post} 
with commands below 
<<post,eval=FALSE>>=
par(mfrow=c(2,2), mar=c(3,3,.5,.5), mgp=c(1.5,.5,0), las=1) 
plot(res.yz$marginals.fix[[1]], type='l', ylab='Density', 
     xlab=expression(alpha[z])) 
plot(res.yz$marginals.fix[[2]], type='l', ylab='Density', 
     xlab=expression(alpha[y])) 
plot(res.yz$marginals.hy[[1]], type='l', ylab='Density', 
     xlab=expression(phi)) 
plot(res.yz$marginals.hy[[4]], type='l', ylab='Density', 
     xlab=expression(beta)) 
@ 
\setkeys{Gin}{width=0.9\textwidth} 
\begin{figure}\centering 
<<vpost,echo=F,fig=T,eps=F,width=7.7,height=3.5>>=
<<post>>
@ 
\caption{Posterior marginal distributions 
of $\alpha_z$ (top left), $\alpha_y$ (top right), 
$\phi$ (bottom left) and $\beta$ (bottom right).}
\label{fig:post}
\end{figure}

To decide if the occurence rain and the amoung 
of the rain have spatially dependency, 
we want to test the significance of the 
random effect $x$. 

One approach is looking at the 2,5\% and 97,5\% 
quantiles of each element of the random effect. 
If for some of they has both quantiles with 
same signal, them they are significantly not null. 
We see on the Figure~\ref{fig:xq} the mean 
and this quantiles for each $x$ in order of 
the posterior mean, with code below 
<<xq,eval=F>>=
ordx <- order(res.yz$summary.random$i.z$mean) 
par(mar=c(3,3,0.5,0.5), mgp=c(1.5,0.5,0), las=1) 
plot(res.yz$summary.random$i.z$mean[ordx], type='l', ylab='x', 
     ylim=range(res.yz$summary.random$i.z[, 4:6])) 
for (i in c(4,6)) lines(res.yz$summary.random$i.z[ordx,i], lty=2) 
abline(h=0, lty=3) 
@ 
\setkeys{Gin}{width=0.99\textwidth}
\begin{figure}\centering 
<<vxq,echo=F,fig=T,eps=F,width=9,height=4>>=
<<xq>>
@ 
\caption{Posterior man of each $x_i$ (continuous line) 
  and its 2.5\% and 97.5\% quantiles of the posterior 
  marginal distributions (dashed lines).}
\label{fig:xq}
\end{figure}

Other approach is to compare the DIC of the model 
with $x$ with the DIC of the model without it. 

We fit the model without $x$ with
<<refit>>=
res.yz0 <- inla(y ~ 0 + z.b0 + y.b0, 
            family=c('binomial', 'gamma'), 
            data=inla.stack.data(stk.zy), control.compute=list(dic=TRUE), 
            control.predictor=list(A=inla.stack.A(stk.zy), compute=TRUE)) 
@ 
and we have
<<dics>>=
rbind(dic.0=c(dic.yz0=sum(res.yz0$dic$local.dic[iz], na.rm=TRUE), 
          dic.yz0=sum(res.yz0$dic$local.dic[-iz], na.rm=TRUE)), dic.s=dic.yz)
@ 
and conclude that the spatial random effect is 
significative for both occurence and amoung of rainfall. 

\section{Results for the spatial random effect}

The spatial random effect modeled by 
the SPDE approach has the $\kappa$ scaling 
parameter, the marginal variance parameter $\sigma_x^2$ 
and the practical range, \cite{lindgrenRL:2011}. 

To obtain results for the variance and for the 
practical range we need a post processing.  
We obtain the marginal distribution for both by
<<resfield>>=
res.yz.f <- inla.spde2.result(res.yz, 'i.y', spde, do.transf=TRUE) 
@ 
The posterior mean for the marginal variance 
<<mvar>>=
inla.emarginal(function(x) x, res.yz.f$marginals.variance.nominal[[1]]) 
@ 
And to the practical range of the process we have 
<<range>>=
inla.emarginal(function(x) x, res.yz.f$marginals.range.nominal[[1]]) 
@ 

At the Figure~\ref{fig:xpars} we look the posterior 
distribution to $\kappa$, $\sigma_x^2$ and of the 
practical range. The $\kappa$ and practical range 
are on degrees units. 
<<xpars,eval=F>>= 
par(mfrow=c(1,3), mar=c(3,3.5,0,0), mgp=c(1.5, .5, 0), las=0) 
plot.default(inla.tmarginal(function(x) exp(x), res.yz$marginals.hy[[3]]), 
             type='l', xlab=expression(kappa), ylab='Density') 
plot.default(res.yz.f$marginals.variance.nominal[[1]], type='l', 
             xlab=expression(sigma[x]^2), ylab='Density') 
plot.default(res.yz.f$marginals.range.nominal[[1]], type='l', 
             xlab='Practical range', ylab='Density') 
@ 
\setkeys{Gin}{width=0.99\textwidth}
\begin{figure}\centering
<<vxpars,echo=F,results=hide,fig=T,eps=F,width=7.5,height=3>>=
<<xpars>>
@ 
\caption{Posterior marginal distribution of $\kappa$ (left),  
  $\sigma_x^2$ (mid) and of the practical range (right).}
\label{fig:xpars}
\end{figure}

Another interesting result is the map of the random field. 
To get it we use get the projector with
<<projgrid>>=
data(PRborder) 
(nxy <- round(c(diff(range(PRborder[,1])), diff(range(PRborder[,2])))/.02)) 
projgrid <- inla.mesh.projector(mesh, xlim=range(PRborder[,1]), 
                                ylim=range(PRborder[,2]), dims=nxy) 
@ 
and get the posterior mean and posterior standard deviation with 
<<projpred>>=
xmean <- inla.mesh.project(projgrid, res.yz$summary.random$i.z$mean) 
xsd <- inla.mesh.project(projgrid, res.yz$summary.random$i.z$sd) 
@ 

To good visualization, we make NA the values corresponding of the 
points of the grid out of the border of the Paran\'a state. 
To do it, we use the function \code{inout()} on \pkg{splancs} 
package, with
<<sp>>=
table(xy.in <- inout(projgrid$lattice$loc, PRborder)) 
xmean[!xy.in] <- xsd[!xy.in] <- NA 
@ 
We visualize the this on Figure~\ref{fig:xrain3}. 
with code below 
<<xrain3c,eval=F>>=
grid.arrange(levelplot(xmean, col.regions=topo.colors(99), 
                       xlab='', ylab='', scales=list(draw=FALSE)), 
             levelplot(xsd, col.regions=topo.colors(99), 
                       xlab='', ylab='', scales=list(draw=FALSE)), nrow=1) 
@ 
\setkeys{Gin}{width=0.99\textwidth}
\begin{figure}\centering
<<xrain3,echo=F,results=hide,fig=T,eps=F,width=10,height=4>>=
<<xrain3c>>
@ 
\caption{Posterior mean (left) and standard deviation 
  (right) of the random field.}
\label{fig:xrain3}
\end{figure}

Comparing the left graph on Figure~\ref{fig:xrain3} 
with the right graph on the Figure~\ref{fig:rain} 
we have a more clear pattern of the rain on third 
day of 2012 on Paran\'a state. 
We see that in fact we have rain near the sea 
(the right border of the map), at south and a 
small point on northeast. 
Also we have no rain in some parts of nothwest. 
