\chapter{Data cloning example}\label{ch:dclon} 

\SweaveOpts{prefix.string=figs/dclon} 
<<sett,echo=F,results=hide>>=
options(width=75, prompt = " ", continue = "   ")
require(INLA)
noremote <- inla.getOption('inla.call')
inla.setOption(inla.call='remote')
@ 

The data clone algorithm for spatial models is described in 
\url{http://www.sciencedirect.com/science/article/pii/S0167947310004329}. 
In the \pkg{INLA} package we have an example 
with the hybrid data clone when the 
random effect are 'iid' on 
\url{http://www.math.ntnu.no/inla/r-inla.org/papers/FS8-2010-R.pdf}

We use the toy data set and built the mesh and SPDE model as follows:
<<toydat>>=
data(SPDEtoy);    coords <- as.matrix(SPDEtoy[,1:2])
mesh <- inla.mesh.2d(coords, cutoff=0.05, max.edge=1:2/10)
spde <- inla.spde2.matern(mesh)
@ 

We consider a set of values for the 
number of clones. 
By cloning we use the \code{replica} 
option on the latent field definition 
function \code{f()}. 
The \code{inla.spde.make.index} function 
allow us to make the replica index. 

The following code loops on the number of clones an fit the model 
with replications 
<<dclonerun>>=
n <- nrow(coords); k <- c(1,2,3,5,10); names(k) <- k
resk <- list()
for (i in 1:length(k)) {
  kk <- k[i]
  A <- inla.spde.make.A(mesh, loc=coords, 
                        index=rep(1:n, kk), repl=rep(1:kk, each=n))
  ind <- inla.spde.make.index(name='i', n.spde=spde$n.spde, n.repl=kk)
  st.dat <- inla.stack(data=list(resp=rep(SPDEtoy[,3], kk)),
                       A=list(A,1),
                       effects=list(ind, list(m=rep(1,n*kk))), tag='est')
  resk[[i]] <- inla(resp ~ 0 + m + f(i, model=spde, replicate=i.repl),
                    data=inla.stack.data(st.dat),
                    control.predictor=list(A=inla.stack.A(st.dat),
                      compute=TRUE))
}
@ 

The posterior marginal distributions 
for the marginal variance and practical range:
<<rfpars>>=
res.f <- lapply(1:length(resk), function(i)
                inla.spde2.result(resk[[i]], 'i', spde, do.transf=TRUE))
@ 

Collecting the results of the posterior mean 
and posterior variance of each parameter:
<<>>=
r <- list()
r$Intercept <- sapply(resk, function(x)
                     c(x$summary.fix[1,1], x$summary.fix[1,2]^2))
r$Likelihood.Variance <- sapply(resk, function(x) {
  d <- inla.tmarginal(function(x) 1/x, x$marginals.hyperpar[[1]]) 
  r <- inla.emarginal(function(x) x, d)
  c(r, inla.emarginal(function(x) (x-r)^2, d))
})
r$Marginal.RF.Variance <- sapply(res.f, function(x) {
  e <- inla.emarginal(function(x) x, x$marginals.variance.nom[[1]])
  c(e, inla.emarginal(function(x) (x - e)^2,
                      x$marginals.variance.nominal[[1]]))
})
r$Kappa <- sapply(resk, function(x) {
  e <- inla.emarginal(function(x) exp(x), x$marginals.hy[[3]])
  c(e, inla.emarginal(function(x) (exp(x) - e)^2, x$marginals.hy[[3]]))
})
@ 
<<likfit,echo=F,results=hide>>=
source('spde-tutorial-functions.R') 
inla.setOption(inla.call=noremote) 
A <- inla.spde.make.A(mesh, loc=coords) 
opt.b <- optim(c(-2,2), negLogLikFun, hessian=TRUE, method='BFGS', 
               X=matrix(1,nrow(coords)), A=A, y=SPDEtoy[,3], spde=spde) 
lk.est <- par2user(opt.b$par, matrix(1,nrow(coords),1), A, SPDEtoy[,3], spde) 
@ 

The main think in data clonning is to visualize 
the posterior mean and the posterior variance of 
the parameters. When we don't have identificability 
problem we see that the mean converges to the 
likelihood estimate and the posterior variance 
converges to zero. 

We visualize the posterior mean and posterior 
variance of each parameter ($\beta_0$, $\sigma_y^2$, 
$\sigma_x^2$ and $\kappa$) relative to 
the result without clone ($k=1$). 
Also, to compare, we visualize the 
likelihood estimate. These plots are shown in 
Figure~\ref{fig:dclon} with following commands
<<dcloneplot, eval=F>>=
par(mfrow=c(2, 2), mar=c(3,3,2,1), mgp=c(1.5,.5,0)) 
for (i in 1:length(r)) { 
  plot(k, r[[i]][2, ]/r[[i]][2,1], type='o', ylim=c(0, 1.2), 
       ylab='relative to k=1', main=names(r)[i]) 
  lines(k, r[[i]][1, ]/r[[i]][1,1], type='o', lty=2, col=2) 
  abline(h=lk.est[i]/r[[i]][1,1], col=4, lty=3) 
}
@ 
\setkeys{Gin}{width=0.7\textwidth}
\begin{figure}\centering 
<<dclonevis,fig=T,eps=F,echo=F,width=5.5,height=5.5>>=
<<dcloneplot>>
@ 
\caption{Likelihood estimate (green), 
  posterior mean (red) and posterior variance (black), 
  relatives to the value with $k=1$.} 
\label{fig:dclon}
\end{figure}
